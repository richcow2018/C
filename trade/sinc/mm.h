/*--------------------------------------------------------------------------*/
/*＜適用機種＞                       ＡＣＥ                                 */
/*＜適用ＯＳ＞                       ＴＲＡＤＥ                             */
/*＜開発環境＞                       ＳＵＮ                                 */
/*＜記述言語＞                       Ｃ言語                                 */
/*＜モジュール形態＞                 関数                                   */
/*＜機能区分＞                      　　　　　                              */
/*＜対象データ＞                     　　　　　　                           */
/*＜工程・階層区分＞                                                        */
/*--------------------------------------------------------------------------*/
/*＜開発システム名＞                 ＡＣＥ−ＳＭＰシステム                 */
/*＜開発システム番号＞                                                      */
/*--------------------------------------------------------------------------*/
/*＜開発担当＞                      （株）富士通                            */
/*＜電話番号＞                       ０３−３７７８−８２９０               */
/*--------------------------------------------------------------------------*/
/*＜設計者名＞                       岡田　芳郎                             */
/*＜設計年月日＞                     １９９４年　４月  １日                 */
/*＜設計修正者名＞                                                          */
/*＜設計修正年月日及び修正ＩＤ＞                                            */
/*--------------------------------------------------------------------------*/
/*＜ソース作成者＞                   岡田　芳郎                             */
/*＜ソース修正年月日及び修正ＩＤ＞   １９９６年０２月０４日   ( M01 )       */
/*  　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　*/
/*   ＳＳＣＹ０１４３　　　　　　　　予備系スタンバイ通知のインタフェース   */
/*  　　　　　　　　　　　　　　　　 コードを追加した。 [ M01 ]　　　　     */
/*  　　　　　 　　　　　　　　　　　　　　　 　        　　　　　　　　　　*/
/*＜ソース作成者＞                   岡田　芳郎                             */
/*＜ソース修正年月日及び修正ＩＤ＞   １９９５年０５月２９日   ( M02 )       */
/*  　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　*/
/*   ＳＴ４３９０　　　　　　　　　　ＡＣＥメンテナンスグループ実行応答電文 */
/*  　　　　　　　　　　　　　　　　 のデータ域構造体のグループコード数を　 */
/*  　　　　　 　　　　　　　　　　　２５０に修正した。   　　　　　　　　　*/
/*  　　　　　 　　　　　　　　　　　　　　　 　        　　　　　　　　　　*/
/*＜ソース修正者＞                   宮脇  伸　                             */
/*＜ソース修正年月日及び修正ＩＤ＞   １９９６年０７月３１日   ( M03 )       */
/*  　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　　*/
/*   ＳＳＣＹ１７７　　　　　　　　　ボリューム閉塞通知／ボリューム復旧情報 */
/*  　　　　　 　　　　　　　　　　　通知のＭＫコード／インタフェースコード */
/*  　　　　　 　　　　　　　　　　　を追加した。　     　　　　　　　　　　*/
/*  　　　　　 　　　　　　　　　　　　　　　 　        　　　　　　　　　　*/
/*＜ソース修正者＞                   宮脇  伸　                             */
/*＜ソース修正年月日及び修正ＩＤ＞   ２０００年０３月２９日   ST5881        */
/*   								 アボート通知のインタフェースコード誤り */
/*   								 を修正									*/
/*  　　　　　 　　　　　　　　　　　　　　　 　        　　　　　　　　　　*/
/*--------------------------------------------------------------------------*/
/****************************************************************************/
/*                                                                          */
/*                                  mm.h                                    */
/*         リモートメンテナンスサービスコール  インクルードファイル         */
/*                                                                          */
/*                 作成日：1994/4/8     更新日：1994/5/11                   */
/*                                                                          */
/*          ＜内容＞                                                        */
/*             １．サービスコール関数宣言                                   */
/*             ２．ＭＫコードの定義                                         */
/*             ３．インタフェースコードの定義                               */
/*             ４．返却値の定義                                             */
/*             ５．完了コードの定義                                         */
/*             ６．電文の構造体定義                                         */
/*                                                                          */
/****************************************************************************/

#ifndef  UCHAR 
#define  UCHAR  unsigned char
#endif

#ifndef  USHORT 
#define  USHORT unsigned short
#endif

#ifndef  ULONG
#define  ULONG  unsigned long
#endif
/****************************************************************************/
/*                                                                          */
/*                               関数型の定義                               */
/*                                                                          */
/****************************************************************************/

/****************************************************************************/
/*                             メンテナンス管理                             */
/****************************************************************************/

extern   long   mm_gagr();              /* ACEﾒﾝﾃﾅﾝｽｸﾞﾙｰﾌﾟの登録            */
extern   long   mm_gagd();              /* ACEﾒﾝﾃﾅﾝｽｸﾞﾙｰﾌﾟの削除            */
extern   long   mm_gags();              /* ACEﾒﾝﾃﾅﾝｽｸﾞﾙｰﾌﾟの検索            */
extern   long   mm_gagc();              /* ACEﾒﾝﾃﾅﾝｽｸﾞﾙｰﾌﾟの参照            */
extern   long   mm_gage();              /* ACEﾒﾝﾃﾅﾝｽｸﾞﾙｰﾌﾟの実行            */
extern   long   mm_gare();              /* ACEﾒﾝﾃﾅﾝｽ件名の登録              */
extern   long   mm_gacm();              /* ACEﾒﾝﾃﾅﾝｽ件名の参照              */
extern   long   mm_gbgr();              /* BEAMﾒﾝﾃﾅﾝｽｸﾞﾙｰﾌﾟの登録           */
extern   long   mm_gbgd();              /* BEAMﾒﾝﾃﾅﾝｽｸﾞﾙｰﾌﾟの削除           */
extern   long   mm_gbgs();              /* BEAMﾒﾝﾃﾅﾝｽｸﾞﾙｰﾌﾟの検索           */
extern   long   mm_gbgc();              /* BEAMﾒﾝﾃﾅﾝｽｸﾞﾙｰﾌﾟの参照           */
extern   long   mm_gbgi();              /* BEAMﾒﾝﾃﾅﾝｽｸﾞﾙｰﾌﾟの状態照会       */
extern   long   mm_gbre();              /* BEAMﾒﾝﾃﾅﾝｽ件名の登録             */
extern   long   mm_gbcm();              /* BEAMﾒﾝﾃﾅﾝｽ件名の参照             */
extern   long   mm_gdat();              /* ﾘﾓｰﾄﾒﾝﾃﾅﾝｽ日付の設定／取得       */

/****************************************************************************/
/*                          メンテナンスカーネル                            */
/****************************************************************************/

extern   long   mm_kmpt();              /* ﾒﾓﾘﾊﾟｯﾁ                          */
extern   long   mm_kfpt();              /* ﾌｧｲﾙﾊﾟｯﾁ                         */
extern   long   mm_kfch();              /* ﾌｧｲﾙ入替え                       */
extern   long   mm_kfrb();              /* ﾌｧｲﾙﾛｰﾙﾊﾞｯｸ                      */
extern   long   mm_ktfp();              /* ﾃｰﾌﾞﾙﾌｧｲﾙﾊﾟｯﾁ                    */
extern   long   mm_kmct();              /* ﾒﾓﾘﾊﾟｯﾁの許可応答                */
extern   long   mm_kprc();              /* ﾌﾟﾛｾｽ走行依頼                    */

/****************************************************************************/
/*                                                                          */
/*                             ＭＫコードの定義                             */
/*                                                                          */
/****************************************************************************/

#define  MMMK_RMS  0x030E0000           /* 持ち回り電文                     */
#define  MMMK_OCP  0x030C0000           /* ＯＣＰ関連電文                   */
#define  MMMK_SCP  0x03060000           /* ＳＣＰ関連電文                   */
#define  MMMK_EDP  0x01010000           /* ＥＤＰ関連電文                   */
#define  MMMK_ICP  0x03070100           /* ＩＣＰ関連電文                   */
#define  MMMK_RCV  0x030D0000           /* ＲＣＶ関連電文              M03  */

/****************************************************************************/
/*                                                                          */
/*                       インタフェースコードの定義                         */
/*                                                                          */
/****************************************************************************/

/****************************************************************************/
/*                           サービスコール電文                             */
/****************************************************************************/

/******************************   要求電文   ********************************/

#define  MMIFAGR1  0x79001101           /* ACEﾒﾝﾃﾅﾝｽｸﾞﾙｰﾌﾟ登録要求          */
#define  MMIFAGD1  0x79001102           /* ACEﾒﾝﾃﾅﾝｽｸﾞﾙｰﾌﾟ削除要求          */
#define  MMIFAGS1  0x79001103           /* ACEﾒﾝﾃﾅﾝｽｸﾞﾙｰﾌﾟ検索要求          */
#define  MMIFAGC1  0x79001104           /* ACEﾒﾝﾃﾅﾝｽｸﾞﾙｰﾌﾟ参照要求          */
#define  MMIFAGE1  0x79001105           /* ACEﾒﾝﾃﾅﾝｽｸﾞﾙｰﾌﾟ実行要求          */
#define  MMIFAKR1  0x79001106           /* ACEﾒﾝﾃﾅﾝｽ件名登録要求            */
#define  MMIFAKC1  0x79001107           /* ACEﾒﾝﾃﾅﾝｽ件名参照要求            */
#define  MMIFBGR1  0x79001110           /* BEAMﾒﾝﾃﾅﾝｽｸﾞﾙｰﾌﾟ登録要求         */
#define  MMIFBGD1  0x79001111           /* BEAMﾒﾝﾃﾅﾝｽｸﾞﾙｰﾌﾟ削除要求         */
#define  MMIFBGS1  0x79001112           /* BEAMﾒﾝﾃﾅﾝｽｸﾞﾙｰﾌﾟ検索要求         */
#define  MMIFBGC1  0x79001113           /* BEAMﾒﾝﾃﾅﾝｽｸﾞﾙｰﾌﾟ参照要求         */
#define  MMIFBGI1  0x79001114           /* BEAMﾒﾝﾃﾅﾝｽｸﾞﾙｰﾌﾟ状態照会要求(AP) */
#define  MMIFBKR1  0x79001115           /* BEAMﾒﾝﾃﾅﾝｽ件名登録要求           */
#define  MMIFBKC1  0x79001116           /* BEAMﾒﾝﾃﾅﾝｽ件名参照要求           */
#define  MMIFRDS1  0x79001130           /* ﾘﾓｰﾄﾒﾝﾃﾅﾝｽ日付設定要求           */
#define  MMIFRDG1  0x79001131           /* ﾘﾓｰﾄﾒﾝﾃﾅﾝｽ日付取得要求           */
#define  MMIFMPE1  0x79001120           /* メモリパッチ実行要求             */
#define  MMIFFPE1  0x79001121           /* ファイルパッチ実行要求           */
#define  MMIFFCE1  0x79001122           /* ファイル入れ替え実行要求         */
#define  MMIFFRE1  0x79001123           /* ファイルロールバック実行要求     */
#define  MMIFTPE1  0x79001124           /* テーブルファイルパッチ実行要求   */
#define  MMIFMPA1  0x79001125           /* メモリパッチ許可要求             */

/******************************   応答電文   ********************************/

#define  MMIFAGR2  0x79001201           /* ACEﾒﾝﾃﾅﾝｽｸﾞﾙｰﾌﾟ登録応答          */
#define  MMIFAGD2  0x79001202           /* ACEﾒﾝﾃﾅﾝｽｸﾞﾙｰﾌﾟ削除応答          */
#define  MMIFAGS2  0x79001203           /* ACEﾒﾝﾃﾅﾝｽｸﾞﾙｰﾌﾟ検索応答          */
#define  MMIFAGC2  0x79001204           /* ACEﾒﾝﾃﾅﾝｽｸﾞﾙｰﾌﾟ参照応答          */
#define  MMIFAGE2  0x79001205           /* ACEﾒﾝﾃﾅﾝｽｸﾞﾙｰﾌﾟ実行応答          */
#define  MMIFAKR2  0x79001206           /* ACEﾒﾝﾃﾅﾝｽ件名登録応答            */
#define  MMIFAKC2  0x79001207           /* ACEﾒﾝﾃﾅﾝｽ件名参照応答            */
#define  MMIFBGR2  0x79001210           /* BEAMﾒﾝﾃﾅﾝｽｸﾞﾙｰﾌﾟ登録応答         */
#define  MMIFBGD2  0x79001211           /* BEAMﾒﾝﾃﾅﾝｽｸﾞﾙｰﾌﾟ削除応答         */
#define  MMIFBGS2  0x79001212           /* BEAMﾒﾝﾃﾅﾝｽｸﾞﾙｰﾌﾟ検索応答         */
#define  MMIFBGC2  0x79001213           /* BEAMﾒﾝﾃﾅﾝｽｸﾞﾙｰﾌﾟ参照応答         */
#define  MMIFBGI2  0x79001214           /* BEAMﾒﾝﾃﾅﾝｽｸﾞﾙｰﾌﾟ状態照会応答(AP) */
#define  MMIFBKR2  0x79001215           /* BEAMﾒﾝﾃﾅﾝｽ件名登録応答           */
#define  MMIFBKC2  0x79001216           /* BEAMﾒﾝﾃﾅﾝｽ件名参照応答           */
#define  MMIFRDG2  0x79001230           /* ﾘﾓｰﾄﾒﾝﾃﾅﾝｽ日付取得応答           */
#define  MMIFMPE2  0x79001220           /* メモリパッチ実行応答             */
#define  MMIFFPE2  0x79001221           /* ファイルパッチ実行応答           */
#define  MMIFFCE2  0x79001222           /* ファイル入れ替え実行応答         */
#define  MMIFFRE2  0x79001223           /* ファイルロールバック実行応答     */
#define  MMIFTPE2  0x79001224           /* テーブルファイルパッチ実行応答   */
#define  MMIFMPA2  0x79001225           /* メモリパッチ許可応答             */

/******************************   通知電文   ********************************/

#define  MMIFPRR5  0x790015C0           /* プロセス走行依頼通知             */
#define  MMIFMPS5  0x79001520           /* メモリパッチ中止通知             */
#define  MMIFMPF5  0x79001521           /* メモリパッチ終了通知             */
#define  MMIFAPR5  0x79001540           /* ＡＰリモート通知                 */
#define  MMIFAPS5  0x79001541           /* ＡＰリモート通知 ( +System )     */
#define  MMIFSBST  0x79001550			/* 予備系スタンバイ通知  [ M01 ]    */

/****************************************************************************/
/*                             ＳＭＰ制御電文                               */
/****************************************************************************/

/******************************   要求電文   ********************************/

#define  MMIFREC1  0x790021C0           /* リカバリ終了確認要求             */

/******************************   応答電文   ********************************/

#define  MMIFREC2  0x790022C0           /* リカバリ終了確認応答             */

/******************************   通知電文   ********************************/

#define  MMIFINS5  0x1000F000           /* ＩＮＩＴ−Ｓ通知                 */
#define  MMIFINE5  0x1000F001           /* ＩＮＩＴ−Ｅ通知                 */
#define  MMIFMTR5  0x10000500           /* メンテナンス依頼通知             */
#define  MMIFTSC5  0x10002800           /* テーブル退避完了通知             */
#define  MMIFSCH5  0x10000E00           /* 系切り替え通知                   */
#define  MMIFARM5  0x58002000           /* ＡＣＥリモート通知（１）         */
										/* （非同期メッセージ出力依頼電文） */
#define  MMIFASR5  0x58000000           /* ＡＣＥリモート通知（２）         */
										/* （非同期システムメッセージ       */
										/*                  出力依頼電文）  */
#define  MMIFABT5  0x790025C0           /* アボート通知            ST5881   */
#define  MMIFVOUS  0x20900000           /* ボリューム閉塞通知          M03  */
#define  MMIFVRCV  0x20100000           /* ボリューム復旧情報通知      M03  */

/****************************************************************************/
/*                               ＰＵ間電文                                 */
/****************************************************************************/

/****************************   依頼通知電文   ******************************/

#define  MMIFTFC3  0x79003320           /* PU1ﾃｰﾌﾞﾙﾌｧｲﾙ移行依頼通知         */

/****************************   完了通知電文   ******************************/

#define  MMIFTFC4  0x79003420           /* PU1ﾃｰﾌﾞﾙﾌｧｲﾙ移行完了通知         */

/****************************************************************************/
/*                                系間電文                                  */
/****************************************************************************/

/******************************   要求電文   ********************************/

#define  MMIFSTB1  0x790041C0           /* スタンバイ要求                   */

/******************************   応答電文   ********************************/

#define  MMIFSTB2  0x790042C0           /* スタンバイ応答                   */

/****************************   依頼通知電文   ******************************/

#define  MMIFYMP3  0x79004310           /* 予備系メモリパッチ依頼通知       */
#define  MMIFYFP3  0x79004311           /* 予備系ファイルパッチ依頼通知     */
#define  MMIFYFC3  0x79004312           /* 予備系ファイル入れ替え依頼通知   */
#define  MMIFYFR3  0x79004313           /* 予備系ﾌｧｲﾙﾛｰﾙﾊﾞｯｸ依頼通知        */
#define  MMIFYTP3  0x79004314           /* 予備系ﾃｰﾌﾞﾙﾌｧｲﾙﾊﾟｯﾁ依頼通知      */
#define  MMIFYTC3  0x79004315           /* 予備系ﾃｰﾌﾞﾙﾌｧｲﾙ移行依頼通知      */
#define  MMIFYGE3  0x790043C0           /* 予備系ｸﾞﾙｰﾌﾟ実行依頼通知         */

/****************************   完了通知電文   ******************************/

#define  MMIFYMP4  0x79004410           /* 予備系メモリパッチ完了通知       */
#define  MMIFYFP4  0x79004411           /* 予備系ファイルパッチ完了通知     */
#define  MMIFYFC4  0x79004412           /* 予備系ファイル入れ替え完了通知   */
#define  MMIFYFR4  0x79004413           /* 予備系ﾌｧｲﾙﾛｰﾙﾊﾞｯｸ完了通知        */
#define  MMIFYTP4  0x79004414           /* 予備系ﾃｰﾌﾞﾙﾌｧｲﾙﾊﾟｯﾁ完了通知      */
#define  MMIFYTC4  0x79004415           /* 予備系ﾃｰﾌﾞﾙﾌｧｲﾙ移行完了通知      */
#define  MMIFYGE4  0x790044C0           /* 予備系ｸﾞﾙｰﾌﾟ実行完了通知         */

/******************************   通知電文   ********************************/

#define  MMIFYME5  0x79004510           /* 予備系ﾒﾝﾃﾅﾝｽ終了通知             */

/****************************************************************************/
/*                               ＩＣＰ電文                                 */
/****************************************************************************/

/******************************   要求電文   ********************************/

#define  MMIFEBL1  0x60000001           /* 強制閉塞通知                     */

/******************************   応答電文   ********************************/

#define  MMIFEBL2  0x60000001           /* 強制閉塞応答                     */

/******************************   通知電文   ********************************/

#define  MMIFOPN5  0x60000002           /* ｵｰﾌﾟﾝ通知                        */


/****************************************************************************/
/*                                                                          */
/*                               返却値の定義                               */
/*                                                                          */
/****************************************************************************/

#define  MMNORMAL  0x00000000           /* 正常終了                         */
#define  MMWORN    0x00000001           /* 正常終了（条件付き）             */
#define  MMGRPCD   0x00000001           /* グループコード指定エラー         */
#define  MMEXTIM   0x00000002           /* 実行契機指定エラー               */
#define  MMESDATE  0x00000003           /* 実行開始日指定エラー             */
#define  MMNOMEM   0x00000004           /* ( Reserve )                     */ 
#define  MMSTYPE   0x00000005           /* グループ検索方法指定エラー       */
#define  MMSDATE   0x00000006           /* 開始日付指定エラー               */
#define  MMEDATE   0x00000007           /* 終了日付指定エラー               */
#define  MMETYPE   0x00000008           /* グループ実行対象指定エラー       */
#define  MMEXDATE  0x00000009           /* 実行日指定エラー                 */
#define  MMINFSYS  0x00000010           /* 反映系区分指定エラー             */
#define  MMMNTKND  0x00000011           /* メンテナンス種別指定エラー       */
#define  MMPRITY   0x00000012           /* 実行優先度指定エラー             */
#define  MMMNTNO   0x00000013           /* 件名番号指定エラー               */
#define  MMBMODE   0x00000014           /* ＢＥＡＭ端末指定モード指定エラー */
#define  MMBMNUM   0x00000015           /* ＢＥＡＭ端末識別名数指定エラー   */
#define  MMITYPE   0x00000016           /* 状態照会タイプ指定エラー         */
#define  MMFILNM   0x00000017           /* 配信ファイルパス名数指定エラー   */
#define  MMECTYPE  0x00000018           /* 制御タイプ指定エラー             */
#define  MMDATE    0x00000019           /* 設定日付指定エラー               */
#define  MMMTYPE   0x00000020           /* 実行タイプ指定エラー             */
#define  MMREFID   0x00000021           /* 反映系区分指定エラー             */
#define  MMEXMOD   0x00000022           /* 強制実行モード指定エラー         */
#define  MMDMYPR   0x00000023           /* ( Reserve )                     */ 
#define  MMFKIND   0x00000024           /* メンテナンスファイル種別指定ｴﾗｰ  */
#define  MMRLMODE  0x00000025           /* ロールバックモード指定エラー     */
#define  MMTIMEOT  0x00000026           /* 完了待ちタイムオーバー           */
#define  MMETIME   0x00000027           /* 完了待ちタイマ時間指定エラー     */
#define  MMMSQNO   0x00000028           /* ﾒﾓﾘﾊﾟｯﾁ許可要求ｼｰｹﾝｽ番号指定ｴﾗｰ  */
#define  MMFNAME   0x00000029           /* File Name. ERROR                */
#define  MMPRNAME  0x00000030			/* プロセス識別名指定エラー			*/
#define  MMEOSERR  0x00000100           /* TRADE System_Call. ERROR       */ 

/****************************************************************************/
/*                                                                          */
/*                            完了コードの定義                              */
/*                                                                          */
/****************************************************************************/

/****************************************************************************/
/*                       業務固有エラー （１ 〜 １００）                    */
/****************************************************************************/

#define  MMCCD000   0x00000000          /* 正常終了                         */
#define  MMCCD001   0x00000001          /* ﾒﾝﾃﾅﾝｽｸﾞﾙｰﾌﾟが既に2000件登録され */
                                        /* ています                         */
#define  MMCCD002   0x00000002          /* 指定ｸﾞﾙｰﾌﾟｺｰﾄﾞは既に登録されてい */
                                        /* ます                             */
#define  MMCCD003   0x00000003          /* 当該ﾒﾝﾃﾅﾝｽｸﾞﾙｰﾌﾟは実行中です     */
#define  MMCCD004   0x00000004          /* 指定ｸﾞﾙｰﾌﾟｺｰﾄﾞが登録されていませ */
                                        /* ん                               */
#define  MMCCD005   0x00000005          /* ﾘﾓﾒﾝ日付が設定されていないため   */
                                        /* 検索できません                   */
#define  MMCCD006   0x00000006          /* 指定ﾒﾝﾃﾅﾝｽｸﾞﾙｰﾌﾟが実行有効期間中 */
                                        /* ではありません                   */
#define  MMCCD007   0x00000007          /* 指定ﾒﾝﾃﾅﾝｽｸﾞﾙｰﾌﾟはｼｽﾃﾑ終了時のみ */
                                        /* 実行可能です                     */
#define  MMCCD008   0x00000008          /* 指定ﾒﾝﾃﾅﾝｽｸﾞﾙｰﾌﾟが実行済のため   */
                                        /* 実行できません                   */
#define  MMCCD009   0x00000009          /* ﾒﾝﾃﾅﾝｽ件名が既に2000件登録されて */
                                        /* います                           */
#define  MMCCD00A   0x0000000A          /* 指定ﾒﾝﾃﾅﾝｽ件名はｼｽﾃﾑ終了契機の 	*/
                                        /* グループのみ登録可能です         */
#define  MMCCD00B   0x0000000B          /* 指定ﾒﾝﾃﾅﾝｽ件名はONLINE中契機の 	*/
                                        /* グループのみ登録可能です         */
#define  MMCCD00C   0x0000000C          /* ファイルロールバックは登録できま	*/
										/* せん								*/
#define  MMCCD00D   0x0000000D          /* テーブルファイルのメンテナンス	*/
										/* は現用系のみ有効です 			*/
#define  MMCCD010   0x00000010          /* 指定件名番号が登録されていません */
#define  MMCCD011   0x00000011          /* 指定BEAM端末ﾀｲﾌﾟがTLPT上に存在し */
                                        /* ません                           */
#define  MMCCD012   0x00000012          /* 指定BEAM端末識別名が存在しません */
#define  MMCCD013   0x00000013          /* 配信ﾌｧｲﾙがACE上に存在しません    */
#define  MMCCD014   0x00000014          /* ﾘﾓｰﾄﾒﾝﾃﾅﾝｽ日付が未設定です       */
#define  MMCCD015   0x00000015          /* ﾒﾓﾘﾊﾟｯﾁﾃﾞｰﾀﾌｧｲﾙが存在しません    */
#define  MMCCD016   0x00000016          /* ﾒﾓﾘﾊﾟｯﾁ対象ﾌﾟﾛｾｽがTPCT上に存在   */
                                        /* しません                         */
#define  MMCCD017   0x00000017          /* ﾒﾓﾘﾊﾟｯﾁ対象ﾌﾟﾛｾｽが起動されていま */
                                        /* せん                             */
#define  MMCCD018   0x00000018          /* ﾒﾓﾘﾊﾟｯﾁ許可応答待ちﾀｲﾑｱｳﾄｴﾗｰ     */
#define  MMCCD019   0x00000019          /* 予備系ﾒﾓﾘﾊﾟｯﾁ完了通知待ちﾀｲﾑｱｳﾄ  */
                                        /* ｴﾗｰ                              */
#define  MMCCD020   0x00000020          /* ﾀﾞﾐｰﾌﾟﾛｾｽの生成に失敗しました    */
#define  MMCCD021   0x00000021          /* ﾒﾓﾘﾊﾟｯﾁ中止通知を受信しました    */
#define  MMCCD022   0x00000022          /* ｼｽﾃﾑ終了ﾓｰﾄﾞ中です               */
#define  MMCCD023   0x00000023          /* ｼｽﾃﾑ待機ﾓｰﾄﾞ中またはｼｽﾃﾑ系切り替 */
                                        /* えﾓｰﾄﾞ中です                     */
#define  MMCCD024   0x00000024          /* ﾌｧｲﾙﾊﾟｯﾁ対象ﾌｧｲﾙが存在しません   */
#define  MMCCD025   0x00000025          /* ﾌｧｲﾙﾊﾟｯﾁﾃﾞｰﾀﾌｧｲﾙが存在しません   */
#define  MMCCD026   0x00000026          /* 予備系ﾌｧｲﾙﾊﾟｯﾁ完了通知待ちﾀｲﾑｱｳﾄ */
                                        /* ｴﾗｰ                              */
#define  MMCCD027   0x00000027          /* ｼｽﾃﾑ開始ﾓｰﾄﾞ中です               */
#define  MMCCD028   0x00000028          /* ｼｽﾃﾑ終了ﾓｰﾄﾞ中です               */
#define  MMCCD029   0x00000029          /* 入れ替えﾌｧｲﾙが存在しません       */
#define  MMCCD030   0x00000030          /* 差し替えﾌｧｲﾙが存在しません       */
#define  MMCCD031   0x00000031          /* ( Reserve )                     */
#define  MMCCD032   0x00000032          /* ( Reserve )                     */ 
#define  MMCCD033   0x00000033          /* 予備系ﾌｧｲﾙ入れ替え完了通知待ち   */
                                        /* ﾀｲﾑｱｳﾄｴﾗｰ                        */
#define  MMCCD034   0x00000034          /* ﾛｰﾙﾊﾞｯｸ対象ﾌｧｲﾙが存在しません    */
#define  MMCCD035   0x00000035          /* 退避ﾌｧｲﾙが存在しません           */
#define  MMCCD036   0x00000036          /* ﾛｰﾙﾊﾞｯｸ処理が失敗しました        */
                                        /* (対象ﾌｧｲﾙの削除)                 */
#define  MMCCD037   0x00000037          /* ﾛｰﾙﾊﾞｯｸ処理が失敗しました        */
                                        /* (退避ﾌｧｲﾙの変名)                 */
#define  MMCCD038   0x00000038          /* ﾛｰﾙﾊﾞｯｸ処理が失敗しました        */
                                        /* (退避ﾌｧｲﾙの複写)                 */
#define  MMCCD039   0x00000039          /* 予備系ﾌｧｲﾙﾛｰﾙﾊﾞｯｸ完了通知待ちﾀｲﾑ */
                                        /* ｱｳﾄｴﾗｰ                           */
#define  MMCCD040   0x00000040          /* ﾊﾟｯﾁ対象ﾃｰﾌﾞﾙﾌｧｲﾙが存在しません  */
                                        /* (正ﾌｧｲﾙ)                         */
#define  MMCCD041   0x00000041          /* ﾊﾟｯﾁ対象ﾃｰﾌﾞﾙﾌｧｲﾙが存在しません  */
                                        /* (副ﾌｧｲﾙ)                         */
#define  MMCCD042   0x00000042          /* 同一ｸﾞﾙｰﾌﾟの件名数が2000件を超え */
                                        /* ています                         */
#define  MMCCD043   0x00000043          /* 退避ﾌｧｲﾙが256個を超えています    */
#define  MMCCD044   0x00000044          /* ﾒﾓﾘﾊﾟｯﾁ対象ﾌﾟﾛｾｽ状態未処理       */
#define  MMCCD045   0x00000045          /* ﾒﾓﾘﾊﾟｯﾁ対象ﾌﾟﾛｾｽ状態起動要求中   */
#define  MMCCD046   0x00000046          /* ﾒﾓﾘﾊﾟｯﾁ対象ﾌﾟﾛｾｽ状態終了要求中   */
#define  MMCCD047   0x00000047          /* ﾒﾓﾘﾊﾟｯﾁ対象ﾌﾟﾛｾｽ状態強制終了     */
                                        /* 要求中                           */
#define  MMCCD048   0x00000048          /* ﾌﾟﾛｾｽ強制閉塞またはﾒﾝﾃﾅﾝｽ依頼    */
                                        /* を受信したために回収されました   */
#define  MMCCD049   0x00000049          /* ﾃｰﾌﾞﾙﾌｧｲﾙﾊﾟｯﾁﾃﾞｰﾀﾌｧｲﾙが存在しま  */
                                        /* せん                             */
#define  MMCCD050   0x00000050          /* ﾃｰﾌﾞﾙﾌｧｲﾙ移行対象ﾃｰﾌﾞﾙﾌｧｲﾙが存在 */
                                        /* しません(正ﾌｧｲﾙ)                 */
#define  MMCCD051   0x00000051          /* ﾃｰﾌﾞﾙﾌｧｲﾙ移行対象ﾃｰﾌﾞﾙﾌｧｲﾙが存在 */
                                        /* しません(副ﾌｧｲﾙ)                 */
#define  MMCCD052   0x00000052          /* 差し替えﾃｰﾌﾞﾙﾌｧｲﾙが存在しません  */
#define  MMCCD053   0x00000053          /* ﾘﾓｰﾄﾒﾝﾃﾅﾝｽ日付ﾀｲﾌﾟがｼｽﾃﾑ日付の   */
                                        /* ため設定できません               */
#define  MMCCD054   0x00000054          /* ﾒﾝﾃﾅﾝｽ閉塞状態です               */


#define  MMCCD060   0x00000060          /* グループ実行が異常終了した　     */
#define  MMCCD061   0x00000061          /* ＣＳ予備系での主系に対する		*/
										/* メンテナンスは登録できません     */
#define  MMCCD062   0x00000062      	/* 系間送信異常で実行できず			*/
#define  MMCCD063   0x00000063       	/* 予備系T.Oで実行できず			*/
#define  MMCCD064   0x00000064          /* グループ結果反映で異常発生       */
#define  MMCCD065   0x00000065          /* 予約済み                         */
#define  MMCCD066   0x00000066          /* 予約済み                         */
#define  MMCCD067   0x00000067          /* 予約済み                         */
#define  MMCCD068   0x00000068          /* 予約済み                         */
#define  MMCCD069   0x00000069          /* 予約済み                         */


/****************************************************************************/
/*          リモメン制御ファイルアクセスエラー （１０１ 〜 ２００）         */
/****************************************************************************/

#define  MMCCD101   0x00000101          /* ACEﾒﾝﾃﾅﾝｽｸﾞﾙｰﾌﾟ管理ﾌｧｲﾙなし      */
#define  MMCCD105   0x00000105          /* ACEﾒﾝﾃﾅﾝｽ件名管理ﾌｧｲﾙなし        */
#define  MMCCD106   0x00000106          /* BEAMﾒﾝﾃﾅﾝｽｸﾞﾙｰﾌﾟ管理ﾌｧｲﾙなし     */
#define  MMCCD107   0x00000107          /* BEAMﾒﾝﾃﾅﾝｽ件名管理ﾌｧｲﾙなし       */
#define  MMCCD121   0x00000121          /* ACEﾒﾝﾃﾅﾝｽｸﾞﾙｰﾌﾟ管理ﾌｧｲﾙ故障中    */
#define  MMCCD125   0x00000125          /* ACEﾒﾝﾃﾅﾝｽ件名管理ﾌｧｲﾙ故障中      */
#define  MMCCD126   0x00000126          /* BEAMﾒﾝﾃﾅﾝｽｸﾞﾙｰﾌﾟ管理ﾌｧｲﾙ故障中   */
#define  MMCCD127   0x00000127          /* BEAMﾒﾝﾃﾅﾝｽ件名管理ﾌｧｲﾙ故障中     */
#define  MMCCD141   0x00000141          /* ACEﾒﾝﾃﾅﾝｽｸﾞﾙｰﾌﾟ管理ﾌｧｲﾙｱｸｾｽｴﾗｰ   */
#define  MMCCD142   0x00000142          /* ACEﾒﾝﾃﾅﾝｽｸﾞﾙｰﾌﾟ実行管理ﾌｧｲﾙｱｸｾｽ  */
                                        /* ｴﾗｰ                              */
#define  MMCCD145   0x00000145          /* ACEﾒﾝﾃﾅﾝｽ件名管理ﾌｧｲﾙｱｸｾｽｴﾗｰ     */
#define  MMCCD146   0x00000146          /* BEAMﾒﾝﾃﾅﾝｽｸﾞﾙｰﾌﾟ管理ﾌｧｲﾙｱｸｾｽｴﾗｰ  */
#define  MMCCD147   0x00000147          /* BEAMﾒﾝﾃﾅﾝｽ件名管理ﾌｧｲﾙｱｸｾｽｴﾗｰ    */
#define  MMCCD148   0x00000148          /* 退避ﾌｧｲﾙ生成履歴ﾌｧｲﾙｱｸｾｽｴﾗｰ      */
#define  MMCCD149   0x00000149          /* ﾀﾞﾐｰﾌﾟﾛｾｽ管理ﾌｧｲﾙｱｸｾｽｴﾗｰ         */
#define  MMCCD150   0x00000150          /* ｶｰﾈﾙﾊﾟﾗﾒｰﾀﾌｧｲﾙｱｸｾｽｴﾗｰ            */

/****************************************************************************/
/*              メンテナンスカーネルエラー （２０１ 〜 ３００）             */
/****************************************************************************/

#define  MMCCD201   0x00000201          /* ﾒﾓﾘﾊﾟｯﾁﾌﾟﾛｾｽ生成失敗             */
#define  MMCCD202   0x00000202          /* ﾌｧｲﾙﾊﾟｯﾁﾌﾟﾛｾｽ生成失敗            */
#define  MMCCD203   0x00000203          /* ﾌｧｲﾙ入れ替えﾌﾟﾛｾｽ生成失敗        */
#define  MMCCD204   0x00000204          /* ﾌｧｲﾙﾛｰﾙﾊﾞｯｸﾌﾟﾛｾｽ生成失敗         */
#define  MMCCD205   0x00000205          /* ﾃｰﾌﾞﾙﾌｧｲﾙﾊﾟｯﾁﾌﾟﾛｾｽ生成失敗       */
#define  MMCCD206   0x00000206          /* ﾃｰﾌﾞﾙﾌｧｲﾙ移行ﾌﾟﾛｾｽ生成失敗       */
#define  MMCCD207   0x00000207          /* ﾒﾓﾘﾊﾟｯﾁﾌﾟﾛｾｽ異常終了             */
#define  MMCCD208   0x00000208          /* ﾌｧｲﾙﾊﾟｯﾁﾌﾟﾛｾｽ異常終了            */
#define  MMCCD209   0x00000209          /* ﾌｧｲﾙ入れ替えﾌﾟﾛｾｽ異常終了        */
#define  MMCCD210   0x00000210          /* ﾌｧｲﾙﾛｰﾙﾊﾞｯｸﾌﾟﾛｾｽ異常終了         */
#define  MMCCD211   0x00000211          /* ﾃｰﾌﾞﾙﾌｧｲﾙﾊﾟｯﾁﾌﾟﾛｾｽ異常終了       */
#define  MMCCD212   0x00000212          /* ﾃｰﾌﾞﾙﾌｧｲﾙ移行ﾌﾟﾛｾｽ異常終了       */

/****************************************************************************/
/*                    資源不足エラー （３０１ 〜 ４００）                   */
/****************************************************************************/

#define  MMCCD301   0x00000301          /* プールバッファ確保失敗           */
#define  MMCCD302   0x00000302          /* 共用メモリ確保失敗               */

/****************************************************************************/
/*                      同期エラー （４０１ 〜 ５００）                     */
/****************************************************************************/

#define  MMCCD401   0x00000401          /* 予備系ﾘﾓｰﾄﾒﾝﾃﾅﾝｽが非活性化状態の */
                                        /* ためﾒﾓﾘﾊﾟｯﾁが実行できません      */
#define  MMCCD402   0x00000402          /* 予備系ﾘﾓｰﾄﾒﾝﾃﾅﾝｽが非活性化状態の */
                                        /* ためﾌｧｲﾙﾊﾟｯﾁが実行できません     */
#define  MMCCD403   0x00000403          /* 予備系ﾘﾓｰﾄﾒﾝﾃﾅﾝｽが非活性化状態の */
                                        /* ためﾌｧｲﾙ入れ替えが実行できません */
#define  MMCCD404   0x00000404          /* 予備系ﾘﾓｰﾄﾒﾝﾃﾅﾝｽが非活性化状態の */
                                        /* ためﾌｧｲﾙﾛｰﾙﾊﾞｯｸが実行できません  */
#define  MMCCD405   0x00000405          /* 予備系が再起動されたため予備系   */
                                        /* ﾒﾓﾘﾊﾟｯﾁが異常終了しました        */
#define  MMCCD406   0x00000406          /* 予備系が再起動されたため予備系   */
                                        /* ﾌｧｲﾙﾊﾟｯﾁが異常終了しました       */
#define  MMCCD407   0x00000407          /* 予備系が再起動されたため予備系   */
                                        /* ﾌｧｲﾙ入れ替えが異常終了しました   */
#define  MMCCD408   0x00000408          /* 予備系が再起動されたため予備系   */
                                        /* ﾌｧｲﾙﾛｰﾙﾊﾞｯｸが異常終了しました    */
#define  MMCCD409   0x00000409          /* 予備系が再起動されたため予備系   */
                                        /* ｸﾞﾙｰﾌﾟ実行が異常終了しました  	*/
#define  MMCCD410   0x00000410          /* 予備系非活性状態のため           */
                                        /* ｸﾞﾙｰﾌﾟ実行できません　　　       */


/****************************************************************************/
/*                        その他 （５０１ 〜 ６００）                       */
/****************************************************************************/

#define  MMCCD501   0x00000501          /* パラメータエラー                 */

/****************************************************************************/
/*                        その他 （５０１ 〜 ６００）                       */
/****************************************************************************/
#define  MMCCDGER  (-1)                 /* グループ実行中異常発生			*/
#define  MMCCDGNO  (-2)                 /* グループ抽出不可                 */
#define  MMCCDGDF  (-3)                 /* グループ反映系区分がシステム構成 */
                                        /* に妥当でない                 	*/ 


/****************************************************************************/
/*                                                                          */
/*                    サービスコール応答電文の構造体定義                    */
/*                                                                          */
/****************************************************************************/

/****************************************************************************/
/*                     ＡＣＥメンテナンスグループの登録                     */
/****************************************************************************/

/****************************  ＭＩＡ利用者域  ******************************/

typedef struct
{
              long   ifcode;            /* インタフェースコード             */
              long   reqid;             /* 要求識別子                       */
              char   rsv[24];           /* リザーブ                         */
              long   ccode;             /* 完了コード                       */
              long   faildet;           /* 異常詳細                         */
} ACE_G_REG1;

typedef ACE_G_REG1 *PACE_G_REG1;

/****************************************************************************/
/*                     ＡＣＥメンテナンスグループの削除                     */
/****************************************************************************/

/****************************  ＭＩＡ利用者域  ******************************/

typedef struct
{
              long   ifcode;            /* インタフェースコード             */
              long   reqid;             /* 要求識別子                       */
              char   rsv[24];           /* リザーブ                         */
              long   ccode;             /* 完了コード                       */
              long   faildet;           /* 異常詳細                         */
} ACE_G_DEL1;

typedef ACE_G_DEL1 *PACE_G_DEL1;

/****************************************************************************/
/*                     ＡＣＥメンテナンスグループの検索                     */
/****************************************************************************/

/****************************  ＭＩＡ利用者域  ******************************/

typedef struct
{
              long   ifcode;            /* インタフェースコード             */
              long   reqid;             /* 要求識別子                       */
    unsigned  short  divsum;            /* 分割総数                         */
    unsigned  short  divno;             /* 分割通番                         */
    unsigned  short  outgrp;            /* 出力グループコード総数           */
              short  rsv1;              /* リザーブ１                       */
              char   rsv2[16];          /* リザーブ２                       */
              long   ccode;             /* 完了コード                       */
              long   faildet;           /* 異常詳細                         */
} ACE_G_SER1;

typedef ACE_G_SER1 *PACE_G_SER1;

/**************************  ＭＩＡデータ格納域  ****************************/

typedef struct
{
    unsigned  short  grpnum;            /* グループコード数                 */
              short  rsv1;              /* リザーブ１                       */
              char   gcd[500][8];       /* グループコードリスト             */
              char   rsv2[92];          /* リザーブ２                       */
} ACE_G_SER2;

typedef ACE_G_SER2 *PACE_G_SER2;

/****************************************************************************/
/*                     ＡＣＥメンテナンスグループの検索                     */
/****************************************************************************/

/****************************  ＭＩＡ利用者域  ******************************/

typedef struct
{
              long   ifcode;            /* インタフェースコード             */
              long   reqid;             /* 要求識別子                       */
              char   rsv[24];           /* リザーブ                         */
              long   ccode;             /* 完了コード                       */
              long   faildet;           /* 異常詳細                         */
} ACE_G_COM1;

typedef ACE_G_COM1 *PACE_G_COM1;

/**************************  ＭＩＡデータ格納域  ****************************/

typedef struct
{
              char   gcd[8];            /* グループコード                   */
    unsigned  short  exetim;            /* 実行契機                         */
    unsigned  short  inf;               /* 反映系区分                       */
              long   regdate;           /* 登録日                           */
              long   exstdate;          /* 実行開始日                       */
    unsigned  short  exests;            /* 実行状態                         */
              short  rsv1;              /* リザーブ１                       */
              long   exedate;           /* 実行日                           */
              long   exerslt;           /* 実行結果                         */
              long   exerstd;           /* 実行結果詳細                     */
              char   rsv2[4];           /* リザーブ２                       */
    unsigned  short  kennum;            /* メンテナンス件名数               */
              short  rsv3;              /* リザーブ３                       */
    unsigned  short  kenno[2000];       /* 件名番号リスト                   */
              char   rsv4[52];          /* リザーブ４                       */
} ACE_G_COM2;

typedef ACE_G_COM2 *PACE_G_COM2;

/****************************************************************************/
/*                     ＡＣＥメンテナンスグループの実行                     */
/****************************************************************************/

#define		GEXE_MAXGRP		250			/* 最大グループ数					*/

/****************************  ＭＩＡ利用者域  ******************************/

typedef struct
{
              long   ifcode;            /* インタフェースコード             */
              long   reqid;             /* 要求識別子                       */
    unsigned  short  divsum;            /* 分割総数                         */
    unsigned  short  divno;             /* 分割通番                         */
    unsigned  short  outgrp;            /* 出力グループ実行結果総数         */
              short  rsv1;              /* リザーブ１                       */
              char   rsv2[16];          /* リザーブ２                       */
              long   ccode;             /* 完了コード                       */
              long   faildet;           /* 異常詳細                         */
} ACE_G_EXE1;

typedef ACE_G_EXE1 *PACE_G_EXE1;

/**************************  ＭＩＡデータ格納域  ****************************/

typedef struct
{
              char   gcd[8];            /* グループコード                   */
              long   exrslt;            /* 実行結果                         */
              long   exrstd;            /* 実行結果詳細                     */
} EX_RST;

typedef EX_RST *PEX_RST;

typedef struct
{
    unsigned  short  grpnum;            /* グループコード数                 */
              short  rsv1;              /* リザーブ１                       */
              EX_RST result[ GEXE_MAXGRP ];
								        /* 実行結果構造体リスト 		    */
										/* [ M02 ] 330 -> GEXE_MAXGRP 		*/
              char   rsv2[ 92 ];        /* リザーブ２                       */
										/* [ M02 ] 132 -> 92 				*/
} ACE_G_EXE2;

typedef ACE_G_EXE2 *PACE_G_EXE2;

/****************************************************************************/
/*                       ＡＣＥメンテナンス件名の登録                       */
/****************************************************************************/

/****************************  ＭＩＡ利用者域  ******************************/

typedef struct
{
              long   ifcode;            /* インタフェースコード             */
              long   reqid;             /* 要求識別子                       */
    unsigned  short  kenno;             /* 件名番号                         */
              short  rsv1;              /* リザーブ１                       */
              char   rsv2[20];          /* リザーブ２                       */
              long   ccode;             /* 完了コード                       */
              long   faildet;           /* 異常詳細                         */
} ACE_K_REG1;

typedef ACE_K_REG1 *PACE_K_REG1;

/****************************************************************************/
/*                       ＡＣＥメンテナンス件名の参照                       */
/****************************************************************************/

/****************************  ＭＩＡ利用者域  ******************************/

typedef struct
{
              long   ifcode;            /* インタフェースコード             */
              long   reqid;             /* 要求識別子                       */
              char   rsv[24];           /* リザーブ                         */
              long   ccode;             /* 完了コード                       */
              long   faildet;           /* 異常詳細                         */
} ACE_K_COM1;

typedef ACE_K_COM1 *PACE_K_COM1;

/**************************  ＭＩＡデータ格納域  ****************************/

typedef struct
{
    unsigned  short  kenno;             /* 件名番号                         */
    unsigned  short  mntkind;           /* メンテナンス種別                 */
    unsigned  short  prio;              /* 実行優先度                       */
    unsigned  short  regsys;            /* 登録系区分                       */
              char   gcd[8];            /* グループコード                   */
              long   regdate;           /* 登録日                           */
              char   arglst[256];       /* アーギュメントリスト             */
    struct
    {
    	unsigned  short  exests;        /* 実行状態                         */
                  short  rsv1;          /* リザーブ１                       */
                  long   exedate;       /* 実行日付                         */
    	          long   exerslt;       /* 実行結果                         */
    	          long   exersltd;      /* 実行結果詳細                     */
    	          long   rexrslt;       /* 復旧実行結果結果                 */
    	          long   rexrsltd;      /* 復旧実行結果詳細                 */
    } sts[2];                           /* 主系／従系                       */
              char   rsv3[248];         /* リザーブ２                       */
} ACE_K_COM2;

typedef ACE_K_COM2 *PACE_K_COM2;

/****************************************************************************/
/*                     ＢＥＡＭメンテナンスグループの登録                   */
/****************************************************************************/

/****************************  ＭＩＡ利用者域  ******************************/

typedef struct
{
              long   ifcode;            /* インタフェースコード             */
              long   reqid;             /* 要求識別子                       */
              char   rsv[24];           /* リザーブ                         */
              long   ccode;             /* 完了コード                       */
              long   faildet;           /* 異常詳細                         */
} BEAM_G_REG1;

typedef BEAM_G_REG1 *PBEAM_G_REG1;

/****************************************************************************/
/*                     ＢＥＡＭメンテナンスグループの削除                   */
/****************************************************************************/

/****************************  ＭＩＡ利用者域  ******************************/

typedef struct
{
              long   ifcode;            /* インタフェースコード             */
              long   reqid;             /* 要求識別子                       */
              char   rsv[24];           /* リザーブ                         */
              long   ccode;             /* 完了コード                       */
              long   faildet;           /* 異常詳細                         */
} BEAM_G_DEL1;

typedef BEAM_G_DEL1 *PBEAM_G_DEL1;

/****************************************************************************/
/*                     ＢＥＡＭメンテナンスグループの検索                   */
/****************************************************************************/

/****************************  ＭＩＡ利用者域  ******************************/

typedef struct
{
              long   ifcode;            /* インタフェースコード             */
              long   reqid;             /* 要求識別子                       */
    unsigned  short  divsum;            /* 分割総数                         */
    unsigned  short  divno;             /* 分割通番                         */
    unsigned  short  outgrp;            /* 出力グループコード総数           */
              short  rsv1;              /* リザーブ１                       */
              char   rsv2[16];          /* リザーブ２                       */
              long   ccode;             /* 完了コード                       */
              long   faildet;           /* 異常詳細                         */
} BEAM_G_SER1;

typedef BEAM_G_SER1 *PBEAM_G_SER1;

/**************************  ＭＩＡデータ格納域  ****************************/

typedef struct
{
    unsigned  short  grpnum;            /* グループコード数                 */
              short  rsv1;              /* リザーブ１                       */
              char   gcd[500][8];       /* グループコードリスト             */
              char   rsv2[92];          /* リザーブ２                       */
} BEAM_G_SER2;

typedef BEAM_G_SER2 *PBEAM_G_SER2;

/****************************************************************************/
/*                     ＢＥＡＭメンテナンスグループの参照                   */
/****************************************************************************/

/****************************  ＭＩＡ利用者域  ******************************/

typedef struct
{
              long   ifcode;            /* インタフェースコード             */
              long   reqid;             /* 要求識別子                       */
              char   rsv[24];           /* リザーブ                         */
              long   ccode;             /* 完了コード                       */
              long   faildet;           /* 異常詳細                         */
} BEAM_G_COM1;

typedef BEAM_G_COM1 *PBEAM_G_COM1;

/**************************  ＭＩＡデータ格納域  ****************************/

typedef struct
{
              char   gcd[8];            /* グループコード                   */
              long   regday;            /* 登録日                           */
    unsigned  short  termode;           /* ＢＥＡＭ端末指定モード           */
              short  rsv1;              /* リザーブ１                       */
    unsigned  short  beamtype;          /* ＢＥＡＭ端末タイプ               */
    unsigned  short  beamnum;           /* ＢＥＡＭ端末識別名数             */
              char   blist[32][8];      /* ＢＥＡＭ端末識別名リスト         */
              char   rsv2[236];         /* リザーブ３                       */
} BEAM_G_COM2;

typedef BEAM_G_COM2 *PBEAM_G_COM2;

/****************************************************************************/
/*                   ＢＥＡＭメンテナンスグループの状態照会                 */
/****************************************************************************/

/****************************  ＭＩＡ利用者域  ******************************/

typedef struct
{
              long   ifcode;            /* インタフェースコード             */
              long   reqid;             /* 要求識別子                       */
              char   gcd[8];            /* グループコード                   */
    unsigned  short  divsum;            /* 分割総数                         */
    unsigned  short  divno;             /* 分割通番                         */
    unsigned  short  inqtype;           /* 状態照会タイプ                   */
              short  rsv1;              /* リザーブ１                       */
              char   rsv[8];            /* リザーブ２                       */
              long   ccode;             /* 完了コード                       */
              long   faildet;           /* 異常詳細                         */
} BEAM_G_INQ1;

typedef BEAM_G_INQ1 *PBEAM_G_INQ1;

/****************  ＭＩＡデータ格納域（グループ結果指定）  ******************/

typedef struct
{
              char   beamid[8];         /* ＢＥＡＭ端末識別名               */
              short  ccode;             /* 完了コード                       */
    unsigned  short  exests;            /* グループ実行状態                 */
} B_INQ1;

typedef B_INQ1 *PB_INQ1;

typedef struct
{
    unsigned  short  beamnum;           /* ＢＥＡＭ端末数                   */
              short  rsv;               /* リザーブ                         */
              B_INQ1 beamsts[340];      /* ＢＥＡＭ状態照会リスト           */
} BEAM_G_INQ2;

typedef BEAM_G_INQ2 *PBEAM_G_INQ2;

/**************  ＭＩＡデータ格納域（グループ詳細結果指定）  ****************/

typedef struct
{
    unsigned  short  kenno;             /* ＢＥＡＭ件名番号                 */
    unsigned  short  exests;            /* 実行状態                         */
              long   exerslt;           /* 実行結果                         */
              long   exeday;            /* 実行日付                         */
} B_INQ2;

typedef B_INQ2 *PB_INQ2;

typedef struct
{
    unsigned  short  kennum;            /* ＢＥＡＭ件名数                   */
              short  rsv;               /* リザーブ                         */
              B_INQ2 beamsts[340];      /* ＢＥＡＭ状態照会リスト           */
} BEAM_G_INQ3;

typedef BEAM_G_INQ3 *PBEAM_G_INQ3;

/****************************************************************************/
/*                       ＢＥＡＭメンテナンス件名の登録                     */
/****************************************************************************/

/****************************  ＭＩＡ利用者域  ******************************/

typedef struct
{
              long   ifcode;            /* インタフェースコード             */
              long   reqid;             /* 要求識別子                       */
    unsigned  short  kenno;             /* 件名番号                         */
              short  rsv1;              /* リザーブ１                       */
              char   rsv2[20];          /* リザーブ２                       */
              long   ccode;             /* 完了コード                       */
              long   faildet;           /* 異常詳細                         */
} BEAM_K_REG1;

typedef BEAM_K_REG1 *PBEAM_K_REG1;

/****************************************************************************/
/*                       ＢＥＡＭメンテナンス件名の参照                     */
/****************************************************************************/

/****************************  ＭＩＡ利用者域  ******************************/

typedef struct
{
              long   ifcode;            /* インタフェースコード             */
              long   reqid;             /* 要求識別子                       */
              char   rsv[24];           /* リザーブ                         */
              long   ccode;             /* 完了コード                       */
              long   faildet;           /* 異常詳細                         */
} BEAM_K_COM1;

typedef BEAM_K_COM1 *PBEAM_K_COM1;

/**************************  ＭＩＡデータ格納域  ****************************/

typedef struct
{
    unsigned  short  kenno;             /* 件名番号                         */
              short  rsv1;              /* リザーブ１                       */
              char   gcd[8];            /* グループコード                   */
              long   regday;            /* 登録日                           */
              char   cmdstr[256];       /* ＢＥＡＭコマンド文字列           */
    unsigned  short  sendfln;           /* 配信ファイルパス名数             */
              short  rsv2;              /* リザーブ２                       */
              char   sendflst[5][64];   /* 配信ファイル名リスト             */
              char   rsv3[428];         /* リザーブ３                       */
} BEAM_K_COM2;

typedef BEAM_K_COM2 *PBEAM_K_COM2;

/****************************************************************************/
/*                      リモートメンテナンス日付の取得                      */
/****************************************************************************/

/****************************  ＭＩＡ利用者域  ******************************/

typedef struct
{
              long   ifcode;            /* インタフェースコード             */
              long   reqid;             /* 要求識別子                       */
              long   rmndate;           /* リモートメンテナンス日付         */
              char   rsv[20];           /* リザーブ                         */
              long   ccode;             /* 完了コード                       */
              long   faildet;           /* 異常詳細                         */
} RMN_GETDATE1;

typedef RMN_GETDATE1 *PRMN_GETDATE1;

/****************************************************************************/
/*                              メモリパッチ                                */
/****************************************************************************/

/****************************  ＭＩＡ利用者域  ******************************/

typedef struct
{
              long   ifcode;            /* インタフェースコード             */
              long   reqid;             /* 要求識別子                       */
              char   rsv[24];           /* リザーブ                         */
              long   ccode;             /* 完了コード                       */
              long   faildet;           /* 異常詳細                         */
} MEMORY_PT1;

typedef MEMORY_PT1 *PMEMORY_PT1;

/****************************************************************************/
/*                             ファイルパッチ                               */
/****************************************************************************/

/****************************  ＭＩＡ利用者域  ******************************/

typedef struct
{
              long   ifcode;            /* インタフェースコード             */
              long   reqid;             /* 要求識別子                       */
              long   loadsts;           /* ローディングステータス           */
              char   rsv[20];           /* リザーブ                         */
              long   ccode;             /* 完了コード                       */
              long   faildet;           /* 異常詳細                         */
} FILE_PT1;

typedef FILE_PT1 *PFILE_PT1;

/****************************************************************************/
/*                            ファイル入れ替え                              */
/****************************************************************************/

/****************************  ＭＩＡ利用者域  ******************************/

typedef struct
{
              long   ifcode;            /* インタフェースコード             */
              long   reqid;             /* 要求識別子                       */
              long   loadsts;           /* ローディングステータス           */
              char   rsv[20];           /* リザーブ                         */
              long   ccode;             /* 完了コード                       */
              long   faildet;           /* 異常詳細                         */
} FILE_CH1;

typedef FILE_CH1 *PFILE_CH1;

/****************************************************************************/
/*                          ファイルロールバック                            */
/****************************************************************************/

/****************************  ＭＩＡ利用者域  ******************************/

typedef struct
{
              long   ifcode;            /* インタフェースコード             */
              long   reqid;             /* 要求識別子                       */
              char   rsv[24];           /* リザーブ                         */
              long   ccode;             /* 完了コード                       */
              long   faildet;           /* 異常詳細                         */
} FILE_RB1;

typedef FILE_RB1 *PFILE_RB1;

/****************************************************************************/
/*                         テーブルファイルパッチ                           */
/****************************************************************************/

/****************************  ＭＩＡ利用者域  ******************************/

typedef struct
{
              long   ifcode;            /* インタフェースコード             */
              long   reqid;             /* 要求識別子                       */
              char   rsv[24];           /* リザーブ                         */
              long   ccode;             /* 完了コード                       */
              long   faildet;           /* 異常詳細                         */
} TBFILE_PT1;

typedef TBFILE_PT1 *PTBFILE_PT1;

/****************************************************************************/
/*                         メモリパッチの許可応答                           */
/****************************************************************************/

/****************************  ＭＩＡ利用者域  ******************************/

typedef struct
{
              long   ifcode;            /* インタフェースコード             */
              long   mpsno;             /* ﾒﾓﾘﾊﾟｯﾁ許可要求ｼｰｹﾝｽ番号         */
              char   rsv[32];           /* リザーブ                         */
} MPAT_AD_RES1;

typedef MPAT_AD_RES1 *PMPAT_AD_RES1;

/****************************************************************************/
/*                          プロセス走行依頼通知                            */
/****************************************************************************/

/*****************************  ＭＩＡ利用者域  *****************************/

typedef struct
{
              long   ifcode;            /* インタフェースコード             */
              char   rsv[36];           /* リザーブ                         */
} PRUN_REQ1;

typedef PRUN_REQ1 *PPRUN_REQ1;

/****************************************************************************/
/*                          メモリパッチ中止通知                            */
/****************************************************************************/

/*****************************  ＭＩＡ利用者域  *****************************/

typedef struct
{
              long   ifcode;            /* インタフェースコード             */
    unsigned  long   seqno;             /* ﾒﾓﾘﾊﾟｯﾁ許可要求ｼｰｹﾝｽ番号         */
              char   rsv[32];           /* リザーブ                         */
} MPAT_STOP1;

typedef MPAT_STOP1 *PMPAT_STOP1;

/****************************************************************************/
/*                          メモリパッチ終了通知                            */
/****************************************************************************/

/*****************************  ＭＩＡ利用者域  *****************************/

typedef struct
{
              long   ifcode;            /* インタフェースコード             */
    unsigned  long   seqno;             /* ﾒﾓﾘﾊﾟｯﾁ許可要求ｼｰｹﾝｽ番号         */
              long   exrslt;            /* 同期式メモリパッチ実行結果       */
              long   faildet;           /* 同期式メモリパッチ異常詳細       */
              char   rsv[24];           /* リザーブ                         */
} MPAT_END1;

typedef MPAT_END1 *PMPAT_END1;
